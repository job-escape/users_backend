# Generated by Django 4.2.4 on 2024-11-20 12:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('subscription', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CheckoutPaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('apple_pay', 'Apple Pay'), ('google_pay', 'Google Pay'), ('card', 'Card')], max_length=15, verbose_name='Type')),
                ('is_selected', models.BooleanField(verbose_name='Is selected?')),
                ('payment_id', models.CharField(max_length=30, verbose_name='Payment ID')),
                ('source_id', models.CharField(blank=True, max_length=30, verbose_name='Source ID')),
                ('card_scheme', models.CharField(blank=True, max_length=15, verbose_name='Card scheme')),
                ('card_last4', models.CharField(blank=True, max_length=5, verbose_name='Card last 4')),
                ('card_exp_month', models.CharField(blank=True, max_length=9, verbose_name='Card expiration month')),
                ('card_exp_year', models.CharField(blank=True, max_length=5, verbose_name='Card expiration year')),
                ('fingerprint', models.CharField(blank=True, max_length=100, verbose_name='Fingerprint')),
                ('three_ds', models.BooleanField(blank=True, default=False, verbose_name='Uses 3DS/3RI?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ch_payment_methods', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='FraudPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(verbose_name='Email')),
                ('ip', models.CharField(verbose_name='IP')),
                ('geo', models.CharField(verbose_name='GEO')),
                ('fingerprint', models.CharField(verbose_name='Fingerprint')),
                ('sub_id', models.IntegerField(verbose_name='Subscription ID')),
                ('trial', models.CharField(verbose_name='Trial type')),
                ('error_code', models.CharField(blank=True, null=True, verbose_name='Error code')),
                ('datetime', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
            ],
        ),
        migrations.CreateModel(
            name='CheckoutUserSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(verbose_name='User Payment ID')),
                ('source_id', models.CharField(blank=True, null=True, verbose_name='Source ID')),
                ('source_scheme', models.CharField(blank=True, null=True, verbose_name='Card scheme')),
                ('three_ds', models.BooleanField(blank=True, default=False, verbose_name='Has 3DS/3RI?')),
                ('user_subscription', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='checkout_user_subscription', to='subscription.usersubscription', verbose_name='User Subscription')),
            ],
        ),
        migrations.CreateModel(
            name='CheckoutTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(choices=[('AED', 'Aed'), ('USD', 'Usd'), ('AUD', 'Aud'), ('SGD', 'Sgd'), ('CAD', 'Cad'), ('NZD', 'Nzd'), ('GBP', 'Gbp'), ('EUR', 'Eur')], default='USD', max_length=5, verbose_name='Currency')),
                ('amount', models.FloatField(default=0, verbose_name='Amount')),
                ('payment_id', models.CharField(max_length=30, verbose_name='Transaction payment ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Datetime created')),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payment_checkout.checkoutpaymentmethod', verbose_name='Checkout payment method')),
                ('user_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.usersubscription', verbose_name='User subscription')),
            ],
        ),
        migrations.CreateModel(
            name='CheckoutPaymentAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_due', models.DateTimeField(verbose_name='Datetime of the attempt')),
                ('retry', models.PositiveSmallIntegerField(default=0, verbose_name='Retry counter')),
                ('executed', models.BooleanField(blank=True, default=False, verbose_name='Is attempt executed?')),
                ('response', models.CharField(blank=True, default='', verbose_name='Checkout response status')),
                ('response_code', models.CharField(blank=True, default='', verbose_name='Checkout response code')),
                ('response_summary', models.CharField(blank=True, default='', verbose_name='Checkout response summmary')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Datetime created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Datetime updated')),
                ('ch_user_subscription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='payment_checkout.checkoutusersubscription', verbose_name='Checkout user subscription')),
                ('user_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.usersubscription', verbose_name='User subscription')),
            ],
        ),
        migrations.CreateModel(
            name='CheckoutCustomer',
            fields=[
                ('id', models.CharField(max_length=30, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(blank=True, max_length=50, verbose_name='IP address')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='checkout_customer', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='Checkout3dsPayment',
            fields=[
                ('id', models.CharField(max_length=30, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subscription.usersubscription', verbose_name='User subscription')),
            ],
        ),
        migrations.AddIndex(
            model_name='checkoutusersubscription',
            index=models.Index(fields=['user_subscription'], name='payment_che_user_su_34dc31_idx'),
        ),
        migrations.AddIndex(
            model_name='checkoutusersubscription',
            index=models.Index(fields=['payment_id'], name='payment_che_payment_967225_idx'),
        ),
        migrations.AddIndex(
            model_name='checkouttransaction',
            index=models.Index(fields=['payment_id'], name='payment_che_payment_27127f_idx'),
        ),
        migrations.AddIndex(
            model_name='checkoutpaymentmethod',
            index=models.Index(fields=['payment_id', 'user'], name='payment_che_payment_3c76a8_idx'),
        ),
        migrations.AddConstraint(
            model_name='checkoutpaymentmethod',
            constraint=models.UniqueConstraint(condition=models.Q(('is_selected', True)), fields=('user', 'is_selected'), name='method--user-is_selected-unique-constraint'),
        ),
        migrations.AddIndex(
            model_name='checkoutpaymentattempt',
            index=models.Index(condition=models.Q(('executed', False)), fields=['-date_due', 'executed'], name='checkout-payment--index'),
        ),
    ]
