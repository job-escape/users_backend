# Generated by Django 4.2.4 on 2024-11-20 15:24

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Order of the Component')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ContactForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Name')),
                ('email', models.CharField(blank=True, max_length=100, null=True, verbose_name='Email')),
                ('message', models.TextField(blank=True, null=True, verbose_name='Text')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(blank=True, max_length=100, null=True, verbose_name='Question')),
                ('order', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Order of the question')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ImageComponent',
            fields=[
                ('answercomponent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='faq.answercomponent')),
                ('image', models.ImageField(blank=True, null=True, upload_to='faq/images/', verbose_name='Image')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('faq.answercomponent',),
        ),
        migrations.CreateModel(
            name='TextComponent',
            fields=[
                ('answercomponent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='faq.answercomponent')),
                ('content', tinymce.models.HTMLField(blank=True, default='', verbose_name='Text with HTML Tags')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('faq.answercomponent',),
        ),
        migrations.CreateModel(
            name='VideoComponent',
            fields=[
                ('answercomponent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='faq.answercomponent')),
                ('video', models.FileField(blank=True, null=True, upload_to='faq/videos/', verbose_name='Video')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('faq.answercomponent',),
        ),
        migrations.AddField(
            model_name='answercomponent',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='components', to='faq.question', verbose_name='Question'),
        ),
    ]
