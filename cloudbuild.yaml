steps:
  - name: gcr.io/cloud-builders/docker
    entrypoint: bash
    args:
      - "-c"
      - |
        docker pull $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:latest || exit 0
    id: Pull docker cache
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - "-t"
      - $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
      - "-t"
      - $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:latest
      - .
      - --cache-from
      - $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:latest
    id: Build
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - >-
        $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
    id: Push

  - id: "apply migrations"
    name: "gcr.io/google-appengine/exec-wrapper"
    secretEnv:
      - DJANGO_SECRET
      - DATABASE_SELECTOR
      - USERS_STAGE_DB
      - SOLIDGATE_CONFIG
      - POSTHOG_CONFIG
      - CHECKOUT_CONFIG
      - CONVERSIONS_CONFIG
      - PUBSUB_CONFIG
      - AWS_SECRETS
      - EMAIL_CONFIG
      - MAILERLITE_API_KEY
      - FRONTEND_FUNNEL_URL
      - PM_API_SECRET
      - AMPLITUDE_API_KEY
      - TELEGRAM_BOT_TOKEN
      - FRESHDESK_API_KEY
      - NGROK_HOST
      - NGROK_IP
      - STAGE_USERS_TASKS
      - GCP_INFOS
      - STAGE_USERS_SERVICE_URL
    args:
      [
        "-i",
        "$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA",
        "-s",
        "jobescape-v2:us-east1:stage",
        "-e",
        "DJANGO_SECRET",
        "-e",
        "DATABASE_SELECTOR",
        "-e",
        "USERS_STAGE_DB",
        "-e",
        "SOLIDGATE_CONFIG",
        "-e",
        "POSTHOG_CONFIG",
        "-e",
        "CHECKOUT_CONFIG",
        "-e",
        "CONVERSIONS_CONFIG",
        "-e",
        "PUBSUB_CONFIG",
        "-e",
        "AWS_SECRETS",
        "-e",
        "EMAIL_CONFIG",
        "-e",
        "MAILERLITE_API_KEY",
        "-e",
        "FRONTEND_FUNNEL_URL",
        "-e",
        "PM_API_SECRET",
        "-e",
        "AMPLITUDE_API_KEY",
        "-e",
        "TELEGRAM_BOT_TOKEN",
        "-e",
        "FRESHDESK_API_KEY",
        "-e",
        "NGROK_HOST",
        "-e",
        "NGROK_IP",
        "-e",
        "STAGE_USERS_TASKS",
        "-e",
        "GCP_INFOS",
        "-e",
        "STAGE_USERS_SERVICE_URL",
        "-e",
        "DEBUG=true",
        "-e",
        "STAGE=true",
        "-e",
        "LOCAL_IP=http://0.0.0.0:8000",
        "--",
        "python",
        "manage.py",
        "migrate",
      ]
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk:slim"
    args:
      - run
      - services
      - update
      - $_SERVICE_NAME
      - "--platform=managed"
      - >-
        --image=$_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
      - >-
        --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID
      - "--region=$_DEPLOY_REGION"
      - "--quiet"
    id: Deploy
    entrypoint: gcloud

images:
  - $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA
  - $_AR_HOSTNAME/$PROJECT_ID/cloud-run-source-deploy/$REPO_NAME/$_SERVICE_NAME:latest
options:
  substitutionOption: ALLOW_LOOSE
  logging: CLOUD_LOGGING_ONLY
substitutions:
  _TRIGGER_ID: cda416e5-b957-4f52-abe6-7492f136dd00
  _AR_HOSTNAME: us-east1-docker.pkg.dev
  _PLATFORM: managed
  _SERVICE_NAME: users-stage
  _DEPLOY_REGION: us-east1

tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - users-stage

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/USERS_DJANGO_SECRET/versions/latest
      env: DJANGO_SECRET
    - versionName: projects/$PROJECT_ID/secrets/STAGE_DATABASE_SELECTOR/versions/latest
      env: DATABASE_SELECTOR
    - versionName: projects/$PROJECT_ID/secrets/USERS_STAGE_DB/versions/latest
      env: USERS_STAGE_DB
    - versionName: projects/$PROJECT_ID/secrets/STAGE_SOLIDGATE/versions/latest
      env: SOLIDGATE_CONFIG
    - versionName: projects/$PROJECT_ID/secrets/POSTHOG_CONFIG/versions/latest
      env: POSTHOG_CONFIG
    - versionName: projects/$PROJECT_ID/secrets/STAGE_CHECKOUT/versions/latest
      env: CHECKOUT_CONFIG
    - versionName: projects/$PROJECT_ID/secrets/CONVERSIONS/versions/latest
      env: CONVERSIONS_CONFIG
    - versionName: projects/$PROJECT_ID/secrets/STAGE_GOOGLE_PUBSUB/versions/latest
      env: PUBSUB_CONFIG
    - versionName: projects/$PROJECT_ID/secrets/AWS_SECRETS/versions/latest
      env: AWS_SECRETS
    - versionName: projects/$PROJECT_ID/secrets/EMAIL_CONFIG/versions/latest
      env: EMAIL_CONFIG
    - versionName: projects/$PROJECT_ID/secrets/MAILERLITE_API_KEY/versions/latest
      env: MAILERLITE_API_KEY
    - versionName: projects/$PROJECT_ID/secrets/STAGE_FRONTEND_FUNNEL_URL/versions/latest
      env: FRONTEND_FUNNEL_URL
    - versionName: projects/$PROJECT_ID/secrets/PM_API_SECRET/versions/latest
      env: PM_API_SECRET
    - versionName: projects/$PROJECT_ID/secrets/AMPLITUDE_API_KEY/versions/latest
      env: AMPLITUDE_API_KEY
    - versionName: projects/$PROJECT_ID/secrets/USERS_TELEGRAM_BOT_TOKEN/versions/latest
      env: TELEGRAM_BOT_TOKEN
    - versionName: projects/$PROJECT_ID/secrets/FRESHDESK_API_KEY/versions/latest
      env: FRESHDESK_API_KEY
    - versionName: projects/$PROJECT_ID/secrets/NGROK_HOST/versions/latest
      env: NGROK_HOST
    - versionName: projects/$PROJECT_ID/secrets/NGROK_IP/versions/latest
      env: NGROK_IP
    - versionName: projects/$PROJECT_ID/secrets/STAGE_USERS_TASKS/versions/latest
      env: STAGE_USERS_TASKS
    - versionName: projects/$PROJECT_ID/secrets/GCP_INFOS/versions/latest
      env: GCP_INFOS
    - versionName: projects/$PROJECT_ID/secrets/STAGE_USERS_SERVICE_URL/versions/latest
      env: STAGE_USERS_SERVICE_URL
