# Generated by Django 4.2.4 on 2024-11-20 12:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=100, verbose_name='Name (title)')),
                ('price_amount', models.FloatField(blank=True, default=1, verbose_name='Subscription price')),
                ('price_currency', models.CharField(choices=[('AED', 'Aed'), ('USD', 'Usd'), ('AUD', 'Aud'), ('SGD', 'Sgd'), ('CAD', 'Cad'), ('NZD', 'Nzd'), ('GBP', 'Gbp'), ('EUR', 'Eur')], default='USD', max_length=5, verbose_name='Subscription price currency code')),
                ('price_currency_symbol', models.CharField(blank=True, default='$', help_text='For example: $', max_length=10, verbose_name='Price currency symbol')),
                ('subscription_type', models.CharField(blank=True, choices=[('basic', 'Basic'), ('full', 'Full'), ('extra', 'Extra')], default='basic', verbose_name='Subscription type')),
                ('is_default', models.BooleanField(default=False, verbose_name='Is default on the selling page?')),
                ('billing_cycle_interval', models.CharField(blank=True, choices=[('day', 'Day'), ('week', 'Week'), ('month', 'Month'), ('year', 'Year')], default='day', max_length=5, verbose_name='Billing cycle interval')),
                ('billing_cycle_frequency', models.PositiveIntegerField(blank=True, default=1, verbose_name='Billing cycle frequency')),
                ('trial_timeout_price_amount', models.FloatField(blank=True, default=1, verbose_name='Trial timeout price')),
                ('trial_standard_price_amount', models.FloatField(blank=True, default=1, verbose_name='Trial stardard price')),
                ('trial_standard_discount', models.PositiveIntegerField(blank=True, default=90, help_text='90 by default', verbose_name='Trial stardard discount')),
                ('trial_price_chase_amount', models.FloatField(blank=True, default=1, verbose_name='Trial chase price')),
                ('trial_chase_discount', models.PositiveIntegerField(blank=True, default=95, help_text='95 by default', verbose_name='Trial chase discount')),
                ('trial_price_currency', models.CharField(blank=True, default='USD', help_text='For example: USD', max_length=5, verbose_name='Trial price currency code')),
                ('trial_period_interval', models.CharField(blank=True, choices=[('day', 'Day'), ('week', 'Week'), ('month', 'Month'), ('year', 'Year')], default='day', max_length=5, verbose_name='Trial period interval')),
                ('trial_cycle_frequency', models.PositiveIntegerField(blank=True, default=1, verbose_name='Trial cycle frequency')),
            ],
        ),
        migrations.CreateModel(
            name='Upsell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=100, verbose_name='Name (title)')),
                ('template_id', models.IntegerField(default=37599414, verbose_name='Email template')),
                ('email_bool', models.BooleanField(default=True, verbose_name='Email on upsell?')),
                ('price_amount', models.FloatField(blank=True, default=1, verbose_name='Upsell price')),
                ('price_chase_amount', models.FloatField(blank=True, default=1, verbose_name='Upsell chase price')),
                ('price_currency', models.CharField(choices=[('AED', 'Aed'), ('USD', 'Usd'), ('AUD', 'Aud'), ('SGD', 'Sgd'), ('CAD', 'Cad'), ('NZD', 'Nzd'), ('GBP', 'Gbp'), ('EUR', 'Eur')], default='USD', max_length=5, verbose_name='Subscription price currency code')),
                ('price_currency_symbol', models.CharField(blank=True, default='$', help_text='For example: $', max_length=10, verbose_name='Price currency symbol')),
            ],
        ),
        migrations.CreateModel(
            name='UserUpsell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid', models.BooleanField(default=False, verbose_name='Paid ?')),
                ('upsell', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='subscription.upsell', verbose_name='Upsell')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='upsells', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_started', models.DateField(blank=True, default=django.utils.timezone.now, verbose_name='Activation date')),
                ('expires', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Expiration Date')),
                ('status', models.CharField(choices=[('active', 'Active'), ('past_due', 'Overdue'), ('paused', 'Paused'), ('trialing', 'Trialing'), ('canceled', 'Canceled'), ('inactive', 'Inactive')], default='active', verbose_name='Subscription status')),
                ('paid_counter', models.PositiveBigIntegerField(blank=True, default=0, verbose_name='Number of times the subscription was paid (renewed+1)')),
                ('notification_sent', models.BooleanField(blank=True, null=True, verbose_name='Was pre-billing notification sent?')),
                ('subscription', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='subscription.subscription', verbose_name='Subscription')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subscriptions', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('transaction_id', models.CharField(max_length=50, verbose_name='Transaction ID')),
                ('payment_system', models.CharField(choices=[('solidgate', 'Solidgate'), ('checkout', 'Checkout')], null=True, verbose_name='Payment system')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, default='', verbose_name='Comment')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subscription_feedbacks', to=settings.AUTH_USER_MODEL, verbose_name='User (Author)')),
            ],
            options={
                'ordering': ['-date_created'],
            },
        ),
    ]
