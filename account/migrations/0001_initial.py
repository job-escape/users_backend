# Generated by Django 4.2.4 on 2024-11-20 12:02

import account.models
import custom.custom_validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[custom.custom_validators.validate_lowercase], verbose_name='Email address')),
                ('full_name', models.CharField(blank=True, max_length=150, verbose_name='Full name')),
                ('payment_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Payment email')),
                ('payment_system', models.CharField(choices=[('solidgate', 'Solidgate'), ('checkout', 'Checkout')], default='checkout', verbose_name='Payment system')),
                ('image', models.CharField(blank=True, max_length=200, null=True, verbose_name='Profile Image')),
                ('email_consent', models.BooleanField(blank=True, null=True, verbose_name='Consent for receiving emails')),
                ('job_notification', models.BooleanField(default=False, help_text='Designates if the user agreed to receive job notifications')),
                ('trustpilot_review', models.BooleanField(default=False, help_text='Whether the user left a TrustPilot review or not')),
                ('token', models.CharField(blank=True, null=True, verbose_name='Registration Token')),
                ('token_set_time', models.DateTimeField(blank=True, null=True, verbose_name='The time last token was set')),
                ('code', models.CharField(blank=True, null=True, verbose_name='Password Set/Update Code')),
                ('code_set_time', models.DateTimeField(blank=True, null=True, verbose_name='The time last code was set')),
                ('personal_plan_pk', models.CharField(blank=True, null=True, verbose_name='Personal Plan')),
                ('prompt_upsell', models.BooleanField(default=False, help_text='Prompt Upsell paid')),
                ('mentor_upsell', models.BooleanField(default=False, help_text='Mentor Upsell paid')),
                ('funnel_info', models.JSONField(blank=True, null=True, verbose_name='Funnel information')),
                ('country_code', models.CharField(blank=True, null=True, verbose_name='Country code')),
                ('device_id', models.CharField(default='Unknown', verbose_name='Last device ID')),
                ('video_credit', models.PositiveIntegerField(default=10, verbose_name='Remaining video credits')),
                ('video_credit_due', models.DateTimeField(default=account.models.get_default_video_due, verbose_name='Video credit reset time')),
                ('d2_csat', models.BooleanField(default=False, help_text='Show D2 CSAT?')),
                ('d3_csat', models.BooleanField(default=False, help_text='Show D3 CSAT?')),
                ('ai_csat', models.BooleanField(default=False, help_text='Show AI CSAT?')),
                ('ab_test_48', models.CharField(blank=True, default=None, null=True, verbose_name='AB test 48')),
                ('ab_test_51', models.CharField(blank=True, default=None, null=True, verbose_name='AB test 51')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', account.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserOnboarding',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='onboarding', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('registration', models.BooleanField(default=False, verbose_name='Completed registration?')),
                ('first_course', models.BooleanField(default=False, verbose_name='First course?')),
                ('first_project', models.BooleanField(default=False, verbose_name='First project?')),
                ('first_interview', models.BooleanField(default=False, verbose_name='First interview?')),
                ('lab', models.BooleanField(default=False, verbose_name='Lab onboarding?')),
                ('first_text', models.BooleanField(default=False, verbose_name='First text generation?')),
                ('first_image', models.BooleanField(default=False, verbose_name='First image generation?')),
                ('first_video', models.BooleanField(default=False, verbose_name='First video generation?')),
            ],
        ),
    ]
